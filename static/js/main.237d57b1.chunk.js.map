{"version":3,"sources":["components/CVDisplay/cv.js","components/DataInput/general.js","components/DataInput/education.js","components/DataInput/experience.js","components/DataInput/form.js","components/overview.js","App.js","index.js"],"names":["DisplayCV","prop","DisplayGeneral","data","firstName","lastName","email","phoneNumber","DisplayEducation","console","log","map","education","i","schoolName","degree","startDate","endDate","DisplayExperience","experience","companyName","jobTitle","roleStarted","roleEnded","roleDescription","onSubmit","e","setSubmitted","preventDefault","general","type","value","FormObject","formObjects","label","name","id","field","onChange","handleChange","arrayIndex","GeneralForm","setGeneral","index","target","newArr","EducationForm","setEducation","onClick","prevEducation","uniqid","ExperienceForm","setExperience","prevExperience","DataForm","className","ToggleDisplay","useState","submitted","Overview","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.237d57b1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./../../styles/DataForm.css\";\n\nfunction DisplayCV(prop) {\n  function handleEdit(e) {\n    console.log(\"edit form\");\n    prop.setSubmitted(false);\n    e.preventDefault();\n  }\n\n  function DisplayGeneral(data) {\n    return (\n      <div>\n        <h1>General</h1>\n        <h2>\n          {data.data[0].firstName} {data.data[0].lastName}\n        </h2>\n        <h3>\n          {data.data[0].email} {data.data[0].phoneNumber}\n        </h3>\n      </div>\n    );\n  }\n\n  function DisplayEducation(data) {\n    console.log(data);\n\n    return (\n      <div>\n        <h1>Education</h1>\n        {data.data.map((education, i) => {\n          return (\n            <div key={i}>\n              <h2>{education.schoolName}</h2>\n              <h3>{education.degree}</h3>\n              <h4>\n                {education.startDate} - {education.endDate}\n              </h4>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function DisplayExperience(data) {\n    console.log(data);\n\n    return (\n      <div>\n        <h1>Experience</h1>\n        {data.data.map((experience, i) => {\n          return (\n            <div key={i}>\n              <h2>{experience.companyName}</h2>\n              <h3>{experience.jobTitle}</h3>\n              <h4>\n                {experience.roleStarted} - {experience.roleEnded}\n              </h4>\n              <h5>{experience.roleDescription}</h5>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleEdit}>\n        <DisplayGeneral data={prop.general} />\n        <DisplayEducation data={prop.education} />\n        <DisplayExperience data={prop.experience} />\n        <input type=\"submit\" value=\"Edit Info\" />\n      </form>\n    </div>\n  );\n}\n\nexport default DisplayCV;\n","import React from \"react\";\nimport \"./../../styles/DataForm.css\";\n\nfunction GeneralForm(prop) {\n  const setGeneral = prop.setGeneral;\n  const general = prop.general;\n\n  const handleChange = (index) => (e) => {\n    const { name, value } = e.target;\n    let newArr = [...general];\n    newArr[index][name] = value;\n    setGeneral(newArr);\n  };\n\n  return (\n    <div>\n      <h3>General Information:</h3>\n      <div>\n        {general.map((general, index) => {\n          return (\n            <FormObject\n              id={general.id}\n              firstName={general.firstName}\n              lastName={general.lastName}\n              email={general.email}\n              phoneNumber={general.phoneNumber}\n              handleChange={handleChange}\n              arrayIndex={index}\n              key={index}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction FormObject(prop) {\n  const formObjects = [\n    {\n      label: \"First Name:\",\n      type: \"text\",\n      name: \"firstName\",\n      value: prop.firstName,\n    },\n    {\n      label: \"Last Name:\",\n      type: \"text\",\n      name: \"lastName\",\n      value: prop.lastName,\n    },\n    {\n      label: \"Email:\",\n      type: \"textarea\",\n      name: \"email\",\n      value: prop.email,\n    },\n    {\n      label: \"Phone Number:\",\n      type: \"tel\",\n      name: \"phoneNumber\",\n      value: prop.phoneNumber,\n    },\n  ];\n  return (\n    <div id={prop.id}>\n      {formObjects.map((field, i) => {\n        return (\n          <label key={i}>\n            {field.label}\n            <input\n              type={field.type}\n              name={field.name}\n              value={field.value}\n              onChange={prop.handleChange(prop.arrayIndex)}\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default GeneralForm;\n","import React from \"react\";\nimport \"./../../styles/DataForm.css\";\nimport uniqid from \"uniqid\";\n\nfunction EducationForm(prop) {\n  const setEducation = prop.setEducation;\n  const education = prop.education;\n\n  const handleChange = (index) => (e) => {\n    const { name, value } = e.target;\n    let newArr = [...education];\n    newArr[index][name] = value;\n    setEducation(newArr);\n  };\n\n  function handleAddClick(e) {\n    setEducation((prevEducation) => [\n      ...prevEducation,\n      {\n        id: uniqid(),\n        schoolName: \"\",\n        degree: \"\",\n        startDate: \"\",\n        endDate: \"\",\n      },\n    ]);\n    e.preventDefault();\n  }\n\n  console.log(education);\n\n  return (\n    <div>\n      <h3>Education:</h3>\n      <div>\n        {education.map((experience, index) => {\n          return (\n            <FormObject\n              id={experience.id}\n              schoolName={experience.schoolName}\n              degree={experience.degree}\n              startDate={experience.startDate}\n              endDate={experience.endDate}\n              handleChange={handleChange}\n              arrayIndex={index}\n              key={index}\n            />\n          );\n        })}\n      </div>\n      <div>\n        <button onClick={handleAddClick}>Add School</button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormObject(prop) {\n  const formObjects = [\n    {\n      label: \"School Name:\",\n      type: \"text\",\n      name: \"schoolName\",\n      value: prop.schoolName,\n    },\n    {\n      label: \"Degree:\",\n      type: \"text\",\n      name: \"degree\",\n      value: prop.degree,\n    },\n    {\n      label: \"Course Started:\",\n      type: \"month\",\n      name: \"startDate\",\n      value: prop.startDate,\n    },\n    {\n      label: \"Course Completed:\",\n      type: \"month\",\n      name: \"endDate\",\n      value: prop.endDate,\n    },\n  ];\n  return (\n    <div id={prop.id}>\n      {formObjects.map((field, i) => {\n        return (\n          <label key={i}>\n            {field.label}\n            <input\n              type={field.type}\n              name={field.name}\n              value={field.value}\n              onChange={prop.handleChange(prop.arrayIndex)}\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default EducationForm;\n","import React from \"react\";\nimport \"./../../styles/DataForm.css\";\nimport uniqid from \"uniqid\";\n\nfunction ExperienceForm(prop) {\n  const setExperience = prop.setExperience;\n  const experience = prop.experience;\n\n  const handleChange = (index) => (e) => {\n    const { name, value } = e.target;\n    let newArr = [...experience];\n    newArr[index][name] = value;\n    setExperience(newArr);\n  };\n\n  function handleAddClick(e) {\n    setExperience((prevExperience) => [\n      ...prevExperience,\n      {\n        id: uniqid(),\n        companyName: \"\",\n        jobTitle: \"\",\n        roleDescription: \"\",\n        roleStarted: \"\",\n        roleEnded: \"\",\n      },\n    ]);\n    e.preventDefault();\n  }\n\n  return (\n    <div>\n      <h3>Experience:</h3>\n      <div>\n        {experience.map((experience, index) => {\n          return (\n            <FormObject\n              id={experience.id}\n              companyName={experience.companyName}\n              jobTitle={experience.jobTitle}\n              roleDescription={experience.roleDescription}\n              roleStarted={experience.roleStarted}\n              roleEnded={experience.roleEnded}\n              handleChange={handleChange}\n              arrayIndex={index}\n              key={index}\n            />\n          );\n        })}\n      </div>\n      <div>\n        <button onClick={handleAddClick}>Add Experience</button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormObject(prop) {\n  const formObjects = [\n    {\n      label: \"Company Name:\",\n      type: \"text\",\n      name: \"companyName\",\n      value: prop.companyName,\n    },\n    {\n      label: \"Job Title:\",\n      type: \"text\",\n      name: \"jobTitle\",\n      value: prop.jobTitle,\n    },\n    {\n      label: \"Role Description:\",\n      type: \"textarea\",\n      name: \"roleDescription\",\n      value: prop.roleDescription,\n    },\n    {\n      label: \"Job Started:\",\n      type: \"month\",\n      name: \"roleStarted\",\n      value: prop.roleStarted,\n    },\n    {\n      label: \"Job Ended:\",\n      type: \"month\",\n      name: \"roleEnded\",\n      value: prop.roleEnded,\n    },\n  ];\n  return (\n    <div id={prop.id}>\n      {formObjects.map((field, i) => {\n        return (\n          <label key={i}>\n            {field.label}\n            <input\n              type={field.type}\n              name={field.name}\n              value={field.value}\n              onChange={prop.handleChange(prop.arrayIndex)}\n            />\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ExperienceForm;\n","import React from \"react\";\nimport GeneralForm from \"./general\";\nimport EducationForm from \"./education\";\nimport ExperienceForm from \"./experience\";\nimport \"./../../styles/DataForm.css\";\n\nfunction DataForm(prop) {\n  function handleSubmit(e) {\n    console.log(\"form submmited\");\n    prop.setSubmitted(true);\n    e.preventDefault();\n  }\n\n  return (\n    <div id=\"dataForm\">\n      <div className=\"form-header\">\n        <h1>CV Generator</h1>\n        <h2>Complete the form below to create your CV!</h2>\n        <hr />\n      </div>\n      <form className=\"form-body\" onSubmit={handleSubmit}>\n        <GeneralForm general={prop.general} setGeneral={prop.setGeneral} />\n        <EducationForm\n          education={prop.education}\n          setEducation={prop.setEducation}\n        />\n        <ExperienceForm\n          experience={prop.experience}\n          setExperience={prop.setExperience}\n        />\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default DataForm;\n","import React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport DisplayCV from \"./CVDisplay/cv\";\nimport DataForm from \"./DataInput/form\";\n\nfunction Overview() {\n  const [submitted, setSubmitted] = useState(false);\n\n  return (\n    <div>\n      <ToggleDisplay submitted={submitted} setSubmitted={setSubmitted} />\n    </div>\n  );\n}\n\nfunction ToggleDisplay(prop) {\n  const [education, setEducation] = useState([\n    {\n      id: uniqid(),\n      schoolName: \"\",\n      degree: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    },\n  ]);\n\n  const [experience, setExperience] = useState([\n    {\n      id: uniqid(),\n      companyName: \"\",\n      jobTitle: \"\",\n      roleDescription: \"\",\n      roleStarted: \"\",\n      roleEnded: \"\",\n    },\n  ]);\n\n  const [general, setGeneral] = useState([\n    {\n      id: uniqid(),\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n    },\n  ]);\n\n  const isSubmitted = prop.submitted;\n\n  if (isSubmitted) {\n    return (\n      <DisplayCV\n        general={general}\n        setGeneral={setGeneral}\n        experience={experience}\n        setExperience={setExperience}\n        education={education}\n        setEducation={setEducation}\n        submitted={prop.submitted}\n        setSubmitted={prop.setSubmitted}\n      />\n    );\n  }\n  return (\n    <DataForm\n      general={general}\n      setGeneral={setGeneral}\n      experience={experience}\n      setExperience={setExperience}\n      education={education}\n      setEducation={setEducation}\n      submitted={prop.submitted}\n      setSubmitted={prop.setSubmitted}\n    />\n  );\n}\n\nexport default Overview;\n","import React from \"react\";\nimport Overview from \"./components/overview\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Overview />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}